'''
按序输入一颗二叉树，0,6,3,5,4,7,8,9,2,并建立一颗二叉查找树，最后输出存储此二叉树的一维数组
二叉查找树具有以下特点：
1,可以是空集合，若不是空集合，则节点上一定要有一个键值
2,每一个树根的值需大于左子树的值
3，小于右子树的值
4，左右子树也是二叉查找树

把一个二叉树想象成满二叉树：
1，左子树索引是父节点索引乘以2
2，右子树索引值是父节点索引乘以2加1
'''
List_ori=[0,6,3,5,4,7,8,9,2]
List_tree=[0]*16#可以用2^（n-1）来算
def tree_create(L_ori,L_tree):
    for i in range(1,len(L_ori)):#注意这个程序里面的循环都是从1开始取，因为从下标1开始取才好用规律公式计算索引
        j=1
        while L_tree[j]!=0:
            if L_ori[i]>L_tree[j]:
                j=j*2+1
            else:
                j=j*2
        L_tree[j]=L_ori[i]

tree_create(List_ori,List_tree)
print(List_tree[1::])
